# Expires map.
map $sent_http_content_type $expires {
    default                    off;
    text/html                  epoch;
    text/css                   max;
    application/javascript     max;
    ~image/                    max;
    ~font/                     max;
}

# Set the `immutable` cache control options only for assets with a cache busting `v` argument
map $arg_v $asset_immutable {
    "" "";
    default "immutable";
}

# $SERVER_NAME should be url of the website without www, for example: abc.com
server {
    listen 80;
    server_name www.$SERVER_NAME;
    return 301 https://$SERVER_NAME$request_uri;
}

server {
    listen 80 default_server;
    server_name $SERVER_NAME;

    # Caching headers.
    expires $expires;

    # Path to the log files.
    error_log   /var/log/nginx/error.log;
    access_log  /var/log/nginx/access.log;

    # Define root directory and error pages.
    root  /var/www/html;
    error_page 404 /404.html;

    # Prevent nginx HTTP Server Detection.
    server_tokens off;

    # Remove X-Powered-By, which is an information leak.
    fastcgi_hide_header X-Powered-By;

    # Set max upload size and increase upload timeout.
    client_max_body_size 64M;
    client_body_timeout 300s;

    # The settings allows you to optimize the HTTP2 bandwidth.
    # See https://blog.cloudflare.com/delivering-http-2-upload-speed-improvements/
    # for tuning hints
    client_body_buffer_size 512k;

    ################################
    ######### Enable gzip  #########
    ################################

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types application/atom+xml text/javascript application/javascript application/json application/ld+json 
        application/manifest+json application/rss+xml application/vnd.geo+json application/vnd.ms-fontobject application/wasm 
        application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype 
        image/bmp image/svg+xml image/x-icon text/cache-manifest text/css text/plain text/vcard 
        text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy;

    ################################
    #### HTTP response headers  ####
    ################################

    # Referrer-Policy:
    # Referrer Policy is a newer header that allows a site to control how much information the browser includes with 
    # navigations away from a document and should be set by all sites. Referrer-Policy is a security header that should 
    # be included on communication from your website’s server to a client. The Referrer-Policy tells the web-browser 
    # how to handle referrer information that is sent to websites when a user clicks a link that leads to another page 
    # or website.
    add_header Referrer-Policy "no-referrer" always;

    # Permissions-Policy:
    # Permissions Policy is a new header that allows a site to control which features and APIs can be used in the browser.
    # There is a REALLY good write up on github here. webappsec-permissions-policy/permissions-policy-explainer.md at main
    # · w3c/webappsec-permissions-policy · GitHub 109 . This eventually will move onto Feature-Policy. I have not yet moved.

    # This block changes per service you host:

    # I have set this on most of my pages via: add_header Permissions-Policy "autoplay=(), encrypted-media=(), fullscreen=(),
    #  geolocation=(), microphone=(), midi=()";
    # (I havent needed more than that and none of my pages need much more than that so its a safe setting)
    add_header Permissions-Policy "autoplay=(), encrypted-media=(), fullscreen=()";
    
    # X-Content-Type-Options:
    # X-Content-Type-Options stops a browser from trying to MIME-sniff the content type and forces it to stick with the 
    # declared content-type. The only valid value for this header is “X-Content-Type-Options: nosniff”. This header was 
    # introduced by Microsoft in IE 8 as a way for webmasters to block content sniffing that was happening and could 
    # transform non-executable MIME types into executable MIME types. Since then, other browsers have introduced it, even 
    # if their MIME sniffing algorithms were less aggressive.
    add_header X-Content-Type-Options "nosniff" always;

    # Content-Security-Policy:
    # Content Security Policy is an effective measure to protect your site from XSS attacks. By whitelisting sources of 
    # approved content, you can prevent the browser from loading malicious assets. Content Security Policy became a standard 
    # introduced to prevent cross-site scripting, clickjacking and other code injection attacks resulting from execution of 
    # malicious content in the trusted web page context. There is a good cheat sheat on this website: 
    # https://scotthelme.co.uk/csp-cheat-sheet

    # This block changes per service you host. It is potentially the most difficult and requires you understand each and 
    # every service you host because it does not universally apply without serious breakage.
    add_header Content-Security-Policy "default-src 'none'; base-uri 'self'; connect-src 'self' https://stats.mahdibaghbani.dev; font-src 'self' data:; form-action 'self'; frame-ancestors 'self'; frame-src 'self'; img-src 'self' data:; script-src 'self'; style-src 'self'" always;
    
    # X-Download-Options:
    # The X-Download-Options response header instructs Internet Explorer not to open the file directly but to offer it 
    # for download first. This mitigates some potential Social Engineering attacks.
    add_header X-Download-Options "noopen" always;
    
    # X-Frame-Options:
    # X-Frame-Options allows content publishers to prevent their own content from being used in an invisible frame by 
    # attackers. The DENY option is the most secure, preventing any use of the current page in a frame. More commonly, 
    # SAMEORIGIN is used, as it does enable the use of frames, but limits them to the current domain. X-Frame-Options 
    # tells the browser whether you want to allow your site to be framed or not. By preventing a browser from framing 
    # your site you can defend against attacks like clickjacking.
    add_header X-Frame-Options "SAMEORIGIN" always;
    
    # X-Permitted-Cross-Domain-Policies:
    # Will prevent the browser from MIME-sniffing a response away from the declared content-type. Only this master policy 
    # file is allowed. [HTTP/HTTPS only] Only policy files served with Content-Type: text/x-cross-domain-policy are allowed.
    add_header X-Permitted-Cross-Domain-Policies "none" always;
    
    # X-XSS-Protection:
    # X-XSS-Protection sets the configuration for the XSS Auditor built into older browsers. The recommended value was 
    # “X-XSS-Protection: 1; mode=block”. X-XSS-Protection is a HTTP header understood by Internet Explorer 8 (and newer 
    # versions). This header lets domains toggle on and off the “XSS Filter” of IE8, which prevents some categories of 
    # XSS attacks. IE8 has the filter activated by default, but servers can switch if off by setting. Ideally we have 
    # moved onto the CSP (content security policy)
    add_header X-XSS-Protection "1; mode=block" always;

    # Clear-Site-Data:
    # When we use a webpage, we can leave various pieces of data in the browser that we’d like to clear out if the user 
    # logs out or deletes their account. Clear Site Data gives us a reliable way to do that. Here is the RFC if you want 
    # more details Clear Site Data 8 . I decided to enable it globally on all pages via:
    # add_header Clear-Site-Data "*";

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # Javascript mimetype fixes for nginx
    # Note: The block below should be removed, and the js|mjs section should be
    # added to the block below this one. This is a temporary fix until Nginx 
    # upstream fixes the js mime-type.
    location ~* \.(?:js|mjs)$ {
        types { 
            text/javascript js mjs;
        } 
        try_files $uri $uri/ =404;
        add_header Cache-Control "public, max-age=15778463, $asset_immutable";
        access_log off;
    }

    # Serve static files.
    location ~ \.(?:css|svg|gif|png|jpe?g|webp|avif|ico|wasm|tflite|map|ogg|flac|woff|woff2|ttf|otf|eot)$ {
        try_files $uri $uri/ =404;
        add_header Cache-Control "public, max-age=15778463, $asset_immutable";
        # Optional: Don't log access to assets
        access_log off;

        location ~ \.wasm$ {
            default_type application/wasm;
        }
    }
    
    location / {
        index index.html;
        if ($request_uri ~ ^/(.*)\.html(\?|$)) {
            return 302 /$1;
        }
        try_files $uri $uri.html $uri/ =404;
    }
}
